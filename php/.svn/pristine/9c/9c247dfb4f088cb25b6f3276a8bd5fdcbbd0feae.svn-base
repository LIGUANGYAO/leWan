<?php
/**
 * Created by PhpStorm.
 * User: Admini
 * Date: 2018/12/12
 * Time: 15:26
 * 订单核查控制器
 * 肖亚子
 */
namespace app\system\controller;

use app\api\model\NotifyModel;
use app\common\AdminBaseController;
use app\system\model\OrderdetailsModel;
use app\common\model\Ordertransference;
use Think\Db;


class OrderdetailsController extends AdminBaseController{

    /**
     * @return string
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     * 查询订单
     */
    public function Orderdetail(){

        $Number = $this->get("number");
        if ($Number){
            $OrderId = OrderdetailsModel::OrderIdFind($Number);

            if($OrderId){
                $DataFind    = OrderdetailsModel::OrderFind($OrderId);
                $DataConvert = Ordertransference::OrderDetailsConvert($DataFind);

                $Data        = $DataConvert[0];//订单信息
                $Goods       = $DataFind[1];//订单商品信息
                $Calendar    = $DataFind[2];//到店免预约日历数据
                $Reservation = $DataFind[3];//到店预约制商品或免预约商品
                $Delivery    = $DataConvert[2];//快递预约制商品,预约发货信息
                $OrderCode   = $DataFind[5];//电子码
                $OrderMarkup = $DataConvert[3];//电子码预约加价信息

                $Uid  = $Data["user_id"];
                $User = OrderdetailsModel::OrderUser($Uid);

                if($Goods["pricecalendar"]){
                    $Goods["pricecalendar"] = json_decode($Goods["pricecalendar"],true);
                }

                $this->assign("user",$User);
                $this->assign("data",$Data);
                $this->assign("goods",$Goods);
                $this->assign("calendar",$Calendar);
                $this->assign("reservation",$Reservation);
                $this->assign("ordercode",$OrderCode);
                $this->assign("ordermarkup",$OrderMarkup);
                $this->assign("delivery",$Delivery);
            }
        }

        $this->assign("number",$Number);

        return $this->display('detail', true);
    }

    /**
     * 订单重发短信
     */
    public function reSendCodeSMS(){
        $order_id = $this->post("orderid");
        if($order_id){
            $field = 'o.*, p.product_name, p.product_returnall, p.product_id, p.price_id,
             p.op_id, p.commission, p.num, p.product_startusetime, p.product_endusetime,u.distributor,u.nickname';
            $order = Db::name('order o')->field($field)
                ->join('jay_order_product p', 'p.order_id = o.order_id', 'left')
                ->join('jay_user u', 'u.user_id = o.user_id', 'left')
                ->where(['o.order_id'=>$order_id])->find();

            $consume_code = Db::name('order_consume_code')->field('consume_code')->where(['order_id'=>$order_id])->select();
            $code = '';
            foreach ($consume_code as $val){
                if($val['consume_code']){
                    $code .= $val['consume_code'].',';
                }
            }
            $config = Db::name('sys_config')->order('sort asc')->column('value', 'field');
            if(!empty($order)){
                if($str = checkBadWord( $order['product_name'])){
                    return array('code'=>400,'msg'=>'发送失败,内容包含敏感词"'.$str.'"');
                }
                $notify = new NotifyModel();
                $notify->sendOrderSms($order, $code, $config);
                return array('code'=>200);
            }else{
                return array('code'=>400,'msg'=>'暂无数据1');
            }
        }else{
            return array('code'=>400,'msg'=>'暂无数据2');
        }
    }
}