<?php

namespace app\common;

use think\Controller;
use think\Request;
use think\Session;
use think\Config;
use think\Db;
use app\common\BaseController;
use app\common\RegExpression;
use app\system\model\AdminModel;
use app\system\model\NodesModel;

/**
 * 后台系统管理基类
 * Enter description here ...
 * @author Administrator
 *
 */
class AdminBaseController extends BaseController {

    public $modul;
    public $controller;
    public $action;
    protected $nor_user_web_cookie_key = 'user_web_token';
    protected $nor_user_web_cookie_key_p = 'user_web_p_token';
    public $expire_time = 86400*7;

    /**
     * 入口控制
     * Enter description here ...
     */
    public function __construct() {
        parent::__construct();

        $request = Request::instance();
        $this->modul = $request->module();
        $this->controller = $request->controller();
        $this->action = $request->action();

        $nm = new NodesModel();

        $this->_verify_login();
        $this->_grantAuth($request, $nm);
    }

    /**
     * 操作授权
     * Enter description here ...
     */
    private function _grantAuth($request, $nm) {
        //1.ajax过滤
        if ($request->isAjax()) {
            return;
        }
        //2.过滤特殊操作
        $requestkey = strtolower($this->controller) . '/' . strtolower($this->action);
        if (in_array($requestkey, Config::get('filter_indexaction'))) {
            return;
        }

        //3.过滤不需要验证的操作
        $accross = false;
        $filter = Config::get('filter_controllaction');
        foreach ($filter as $k => $v) {
            if ($requestkey == $v) {
                $accross = true;
            }
        }

        //3.过滤不需要验证的操作
        $accross = false;
        $filter = Config::get('filter_controller');
        foreach ($filter as $k => $v) {
            if (strtolower($this->controller) == $v) {
                $accross = true;
            }
        }


        //3当前操作是否配置到权限表
        $curmenu = $nm->getAction(strtolower($this->controller), strtolower($this->action));
        if (!$curmenu && !$accross) {
            $this->error('请配置节点：' . $this->controller . '/' . $this->action);
        }
        //导航菜单文字
        $this->assign('curmenu',  $curmenu);
        $this->assign('page_title', $curmenu['cat_name'] . ' > ' . $curmenu['title']);
        if (!$accross && Session::get('admin.id') != 100) {
            //2.验证操作权限
            $node = $nm->authorization($this->controller, $this->action, Session::get('admin.role_id'));
            if (!$node) {
                $this->error('权限不足001');
            }
        }
        //加载后台菜单
        $this->_loadMenu($nm, $curmenu);
    }

    /**
     * 加载菜单设置
     */
    private function _loadMenu($nm, $curmenu) {
        if (empty($curmenu)) {
            return;
        }
        //导航分组
        $groups = $nm->getGroup();
        $this->assign('groups', $groups);

        //3.二级菜单
        $menus = $nm->secondMenu(intval($curmenu['group_id']));
        if (empty($menus)) {
            $menus = $nm->secondMenu(intval($groups[0]['id']));
            //$this->redirect('system/' . $menus[0]['codes']);
        }
        $this->assign('group_menus', $menus);
    }

    /**
     * 检测用户是否登录
     * Enter description here ...
     */
    private function _verify_login() {
        $request = Request::instance();
        if (!Session::has('admin')) {
            $nor_user_web_cookie_key = cookie($this->nor_user_web_cookie_key);
            $nor_user_web_cookie_key_p = cookie($this->nor_user_web_cookie_key_p);

            if($nor_user_web_cookie_key && $nor_user_web_cookie_key_p){

                $username = base64_decode($nor_user_web_cookie_key);
                $pwd = base64_decode($nor_user_web_cookie_key_p);
                $user = Db::name('sys_admin')->where(['jname'=>$username])->find();
                if($pwd != $user['jpass']){
                    cookie($this->nor_user_web_cookie_key,null);
                    cookie($this->nor_user_web_cookie_key_p,null);
                    $this->error('登录过期，请重新登录！', 'system/index/login');
                }else{
                    //重新定义过期时间
                    cookie($this->nor_user_web_cookie_key,base64_encode($user['jname']),$this->expire_time);
                    cookie($this->nor_user_web_cookie_key_p,base64_encode($user['jpass']),$this->expire_time);
                    Session::set('admin', $user);
                }
            }else{ //没有登录的并且不在登录页面的
                cookie($this->nor_user_web_cookie_key,null);
                cookie($this->nor_user_web_cookie_key_p,null);
                if(strpos($_SERVER['REQUEST_URI'],'login')===false){
                    $this->error('登录过期，请重新登录！', 'system/index/login');
                }
            }
        }else{
            //2.已登录，直接进入主页
            if ($request->action() == 'login') {
                $this->redirect('system/index/index');
            }
        }
    }

    /**
     * type=1弹出窗口；2=打开网页
     */
    protected function returnAddbtn($name, $url, $type = 1, $width = '600px', $height = '450px') {
        return array('name' => $name, 'url' => url($url), 'type' => $type, 'width' => $width, 'height' => $height);
    }

    protected function returnAddbtn2($name, $url, $type = 1, $width = '600px', $height = '450px') {
        return array('name' => $name, 'url' => $url, 'type' => $type, 'width' => $width, 'height' => $height);
    }

    /**
     * 成功提示
     * Enter description here ...
     * @param string $msg
     * @param string $url
     * @param int $tag  1=普通页面；2=窗口
     */
    protected function toSuccess($msg, $url = null, $tag = 1) {
        $this->success($msg, $url, $tag, '', 1);
    }

    protected function toError($msg, $url = null, $tag = 1) {
        $this->error($msg, $url, $tag, '', 3);
    }

    /**
     * 全局-实时切换单个字段状态 0,1
     * Enter description here ...
     */
    public function switching() {

        $type   = $this->post('type', 0);
        $idkey = $this->post('idkey', 'id');
        $value  = $this->post('value', 0);
        $id     = $this->post('id', 0);
        $tbname = $this->post('tbname', '');
        $field  = $this->post('code', '', RegExpression::REQUIRED, '更新字段');
        if($tbname == 'product' && $field=='product_status'){ //商品上下架
            if($value == 1)
                $data   = array($field=>$value,'obtained_time'=>'');
            else
                $data   = array($field=>$value,'obtained_time'=>time());
        }else{
            $data   = array($field=>$value);
        }

        $res = Db::name($tbname)->where($idkey, $id)->update($data);
        if ($res) {
            $this->commonReturn('更新成功', 1);
        } else {
            $this->commonReturn('更新失败', 0,"input[filed=".$field."]");
        }
    }

    /**
     * 全局-实时保存单个字修改
     * Enter description here ...
     */
    public function realsave() {
        $value = $this->post('value', 0);
        $id = $this->post('id', 0);
        $tbname = $this->post('tbname', '');
        $field = $this->post('code', '', RegExpression::REQUIRED, '更新字段');
        $res = Db::name($tbname)->where('id', $id)->update([$field => $value]);
        if ($res !== false) {
            $this->commonReturn('更新成功', 1);
        } else {
            $this->commonReturn('更新失败', 0);
        }
    }


    /**
     * @param $Action              修改内容说明
     * @param string $TableName    数据表名
     * @param array $Condition     查询条件
     * @param string $PreRevision  修改前数据
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     * 记录操作日志
     * 肖亚子
     */
    protected function log($Action,$TableName = "",$Condition = array(),$PreRevision = "") {

        $am = new AdminModel();
        $am->log($Action,$TableName,$Condition,$PreRevision);
    }

    /**
     * 删除已上传的文件记录
     * Enter description here ...
     * @param unknown_type $folder
     * @param unknown_type $filename
     */
    protected function deleteUploaded($folder, $filename) {
        //文件地址
        //$file = ROOT_PATH .'public' . DS . $folder . DS . $filename;
        //if(file_exists($file)){
        //    @unlink($file);
        //}
        Db::name('sys_temp_uploadimages')->where('fileurl', $filename)->delete();
    }

    /**
     * 删除文件
     * @param unknown $folder
     * @param unknown $filename
     */
    protected function deletefile($folder, $filename) {
        //文件地址
        $file = ROOT_PATH . 'public' . DS . $folder . DS . $filename;
        if (file_exists($file)) {
            @unlink($file);
        }
    }



    /**
     * 获取省份列表
     */
    protected function getProvenceList($status=0) {
        $map['parentid'] = 100000;
        if($status > 0){
            $map['status'] = $status;
        }
        return Db::name('region')->field('`name` as provence, id as `code`')->where($map)->order('id asc')->select();
    }

    /**
     * 获取省份列表
     */
    protected function getCityList($pid, $status=0) {
        $map['parentid'] = $pid;
        if($status > 0){
            $map['status'] = $status;
        }
        return Db::name('region')->field('`name` as city, id as `code`')->where($map)->order('id asc')->select();
    }

    /**
     * 获取省份列表
     */
    protected function getAreaList($cid, $status=0) {
        $map['parentid'] = $cid;
        if($status > 0){
            $map['status'] = $status;
        }
        return Db::name('region')->field('`name` as area, id as `code`')->where($map)->order('id asc')->select();
    }

    public  function TimeContrast($StartTime,$EndTime,$Key,$Condition){

        if (!empty($StartTime) && empty($EndTime)) {
            parent::Tpl_NotGtTime($StartTime,"开始时间不能大于当前时间"); //开始时间不为空和当前时间对比
            $Condition[$Key] = array(array('egt', $StartTime));
        } else if (empty($StartTime) && !empty($EndTime)) {
            parent::Tpl_NotGtTime($EndTime,"结束时间不能大于当前时间"); //结束时间不为空和当前时间对比
            $Condition[$Key] = array(array('lt', $EndTime));
        } else if (!empty($StartTime) && !empty($EndTime)) {
            parent::Tpl_TimeContrast1($StartTime,$EndTime); //开始和结束时间都不为空进行判断
            $Condition[$Key] = array(array('egt', $StartTime), array('elt', $EndTime));
        }

        return $Condition;
    }

}
